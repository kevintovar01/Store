
services:

  react-app:
    container_name: react_app
    build:
      context: ./BaseDrop2/project
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./BaseDrop2/project/src:/app/src
      - ./BaseDrop2/project/public:/app/public
      - /app/node_modules  # Volumen an√≥nimo para evitar problemas con node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    command: ["npm", "run", "dev", "--", "--host"] 
    restart: unless-stopped  # Evita que el contenedor se detenga inesperadamente

  db:
    build: ./database/
    container_name: postgres_db
    ports:
      - "54321:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - datos_postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5050:5050"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL_DOCKER}
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
    restart: unless-stopped

volumes:
  datos_postgres:
    driver: local